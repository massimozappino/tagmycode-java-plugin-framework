package com.tagmycode.plugin.gui.form;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.tagmycode.plugin.SyntaxSnippetEditorFactory;
import com.tagmycode.plugin.gui.AbstractGui;
import com.tagmycode.plugin.gui.GuiUtil;
import com.tagmycode.plugin.gui.SyntaxSnippetEditor;
import com.tagmycode.sdk.model.Snippet;

import javax.swing.*;
import java.awt.*;


public class SnippetView extends AbstractGui {
    private final SyntaxSnippetEditor syntaxSnippetEditor;
    private JPanel mainPanel;
    private JPanel snippetPane;
    private JLabel tagsIconLabel;
    private JPanel tagsContainer;
    private JTextField titleTextField;
    private JTextArea descriptionTextArea;
    private JSplitPane splitPane;

    public SnippetView(SyntaxSnippetEditorFactory syntaxSnippetEditorFactory) {
        getMainComponent().setName("snippet view");
        splitPane.setResizeWeight(.85);
        syntaxSnippetEditor = syntaxSnippetEditorFactory.create();
        syntaxSnippetEditor.setEditable(false);
        snippetPane.add(syntaxSnippetEditor.getMainComponent());
        titleTextField.setEditable(false);
        GuiUtil.removeBorder(titleTextField);
        titleTextField.setOpaque(false);
        descriptionTextArea.setEditable(false);
        descriptionTextArea.setWrapStyleWord(true);
        descriptionTextArea.setLineWrap(true);
        GuiUtil.setPlaceholder("Description", descriptionTextArea);
        initPopupMenuForJTextComponents(getMainComponent());
    }

    public SnippetView setSnippet(Snippet snippet) {
        syntaxSnippetEditor.setTextWithSnippet(snippet);
        titleTextField.setText(snippet.getTitle());
        descriptionTextArea.setText(snippet.getDescription());
        descriptionTextArea.setCaretPosition(0);
        tagsContainer.removeAll();
        if (snippet.getTags().length() == 0) {
            tagsContainer.add(new JLabel("<html><i>no tags</i></html>"));
        } else {
            for (String tag : snippet.getTags().split(" ")) {
                JLabel tagLabel = new JLabel("<html><b><u>" + tag + "</u></b></html>");
                tagsContainer.add(tagLabel);
            }
        }
        return this;
    }

    public SyntaxSnippetEditor getSnippetEditorPane() {
        return syntaxSnippetEditor;
    }

    @Override
    public JComponent getMainComponent() {
        return mainPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel1, BorderLayout.NORTH);
        titleTextField = new JTextField();
        panel1.add(titleTextField, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        splitPane = new JSplitPane();
        splitPane.setOrientation(0);
        mainPanel.add(splitPane, BorderLayout.CENTER);
        snippetPane = new JPanel();
        snippetPane.setLayout(new BorderLayout(0, 0));
        splitPane.setLeftComponent(snippetPane);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        splitPane.setRightComponent(panel2);
        final JScrollPane scrollPane1 = new JScrollPane();
        panel2.add(scrollPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        descriptionTextArea = new JTextArea();
        scrollPane1.setViewportView(descriptionTextArea);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel3, BorderLayout.SOUTH);
        final Spacer spacer1 = new Spacer();
        panel3.add(spacer1, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        tagsIconLabel = new JLabel();
        tagsIconLabel.setIcon(new ImageIcon(getClass().getResource("/icons/tag.png")));
        tagsIconLabel.setText("Tags:");
        panel3.add(tagsIconLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        tagsContainer = new JPanel();
        tagsContainer.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel3.add(tagsContainer, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
